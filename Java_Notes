07/March/2025
# Computer :- Computer is an electronic device which is made up of Hardware and Software components,
              using which we can - Store data
                                 - Process Data
                                 - Retrive data.

# What is Hardware... ?
  - Hardware are the combination of electronic components.
  - Such as RAM, ROM, Graphic card, Motherboard, Cooling fan etc.
  - To run a software.

# What is Software... ?
  - Software is a combination of front-end, middleware and backend which acts an interface between the user and the hardware components.
  - e.g. Windows, Linux, MAC etc.

# What is Language... ?
  - Language is an medium and mode of communication between two or more entities.

# What is programming Language... ?
  - Language which is used to communicate with computer to make it perform a specific task is known as programming Language.
# Creator of Computer :- Charles Babbage 
                      - He is a Mechanical Engineer(Mathematician)
                      - He made Differential Engin in 1832
  - Ada Lovelace ---> First Programmer
#  # levels of programming language
1) Machine Level Or Low Level language
  -  The language which is directly understandable to a machine or processor.
  -  e.g. Binary language - ON, OFF
                            (0, 1)

2)  Assemblely Level Language
  -  The language which consist of pre-defined set of codewords known as mnemonics which was understandable to computer using a assembler.

# What is Assembler... ?
  - Assembler is an intermediate software which acts like an translator which is used to convert or translate
    assemblely level language into machine level language.

3) High Level Language
  - The language which is very similar to human understandable language which is easily readable, understandable and instructable by a programmer 
    to a computer is known as high level language.
  - English was choosen as the base language to make high level language.
  - High level language is converted to machine level language using software know as compiler.

# What is Compiler... ?
  - Compiler is an Intermediate software which  is used to convert high level language to machine level language.

# Platform
  - Platform is a combination of some hardware components alogn with an software components on which application can run is called platform.
  - Software are classified into 2 types according to platforms.
    i] Platform dependent sofware.
   ii] Platform Independent software.

i] Platform dependent software
  - If software are made using C, C++ are platform dependent.
  - If the software design using the specific configuration platform and if the software can run on same configuration such kind of software is know as platform dependent software.

ii] Platform Independent software
  - If a software design using the specific configuration platform and if the software can run an any configuration platform such software are known as platform independent software.
  - If is software which is made using a specific configuration platform and if that software can run on any platform such software called an independent software.
  - Software made using JAVA platform independent
*******************Notes added on date 15 March 2025*******************
# Why Software made using C language iare platform dependetn... ?
---> - When a programmer wirtes a program using C or C++ language save it with .c extension and give it to a C compiler.
     - The C compiler converts .c file into .exe file.
     - WHich contains native machine level code.
     - The native machine level code is only understandable to natvie configuration platform but not any other platform.
     - That's why C & C++ language are platform dependent.

*******************Notes added on date 17 March 2025*******************
#  WHy Java Software are platform independent... ?
---> - If a programmer writes program using Java language & save it with .java extension give it to the Java Compiler.
     - The Java Compiler converts the .java file into .class file which contains Byte Code.
     - Byte Code is an intermediate code created by Java compiler which is neither understandable to computer nor the programmer.
     - This JVM can be uderstandable to any configuration platform if those platform installed with software known as JVM.
     - Creaters of Java have design JVM for every configuration platform such that any platform which is respective JVM can convert BYTE CODE to it's respective machine level language.
     - This is how Software prove the concept of platform independent.
     - Java Software is also called Right Once Run Anywhere concept.
*******************Notes added on date 17 March 2025*******************
# JDK Architecture (Important)

# JVM(Java Virtual Machine)
 - It is an Interpreter which is used to convert byte code into machine level language line by line.
 - The JVM present inside JRE.

#  JRE(Java Runtime Environment)
 - JRE consist of JVM and Built in library files which is used to completely run the Java application.
 - JRE is present inside JDK

# JDK(Java Development Kit)
 - It is a package given by Oracel community.
 - Which consist of JRE and Development Tools, which helps us to develop as well as run the Java application.

# Steps to Create, Cimpile and Execute a Java program.
Step 01 :- To write a java program we need editiors and ide's
        - Editor               IDE
        - Notepad            Eclipse
        - Notepad++          Intellij
        - MS World           NetBeans
        - EditPlus           VS code
        - Sublime                     etc

Step 02 :- Invoke or call the Java compiler to compile the Java file.

# Work of Java Compiler
---> - Compiler checks for syntax(rules of language).
     - If the syntax is write class files are generated.
     - If the syntax is wrong class file are not generated instead it through compile time error where class files are not generated.

Step 03 :- Call the JVM
         - Which is use to execute the class file helps to run class files.

# Structure of Java Program
clsss ClassName
{
    public static void main(String args[])
    {

    }
}
# Class Block 
  - Class Block contains variables, Methods(main method, initializers, Constructors etc)
  - Whatever written within class it is called class block.
  - Whatever written within method is called method block

# Syntax for print statement.
---> - system.out.println(); // To print data to next line.
     - System.out.println(); // To print data to same line.
*******************Notes added on date 18 March 2025*******************

# Basic CLT (Command Line Interface)
  - 1) dir :- To explore the directory.
  - 2) cls :- To clear the screen
  - 3) DriveName :- Shift to another diriver i.e. c:\ D: (Enter) // It wil lshift to D driver
  - 4) cd folderName :- Go to parent folder to child folder.
  - 5) cd.. :- Go one folder previous OR child to parent folder.
  - 6) cd../.. :- Go to double folder previous.
        e.g. :- c:\ program file\Java
              ---> command : cd../.. Enter
              O/P :- C:\
  - 7) mkdir ro md FolderName enter
       O/P :- Create Folder
  - 8) rd Or rmdir FolderName Enter
      O?P :- to remove folder
  - 9) check Java version :- Java -version Enter
  - 10) Check Java Compiler Version :- Javac -version Enter
  - 11) Javac ClassName.java :- To compiler the Java code.
  - 12) Java ClassNae :- To execute the Java Code

# First Program
= class program 
{
  public static void main(String args[])
  {
      System.out.println("Hello World!);
  }
}
Javac Program.java (Enter)
Java Program (Enter)
O?P :- Hello World!

HomeWork :- Introduction in Code
class Introduction
{
  {
    System.out.println("Name : Chinmay Gaikwad");
    System.out.println("College Institute : SIMMC");
    System.out.println("Branch : MCA");
    System.out.println("Age : 23");
    System.out.println("Address : Bavdhan Pune");
  }
}

#  Tokens
  - Tokens are the smallest unit of programming language which helps programmer to create instructions(Programs)
  - Tokens are the smallest unit of programming languate using which programmer create instructions or commands.

-  Tokens are classified into 2 types
  i)  Keyword
 ii)  Identifiers

i) - Compiler aware words are called keywords.
   - They have pre-dfined meaning.
   - It cannot be altered by a programmer.
   - All the keywords are written in lower case.
   - We cannot use keywords for any other purpose (Cannot be used as identifiers).
   - There are 51+ keywords in Java
   - e.g. class, public, static, void etc.

ii) Identifiers
  - Definition :- Identifier are the names given by the programmer to the Java members such as class name, Method name, variable name, package name etc.

*******************Notes added on date 19 March 2025*******************

#  Rules for Naming the Identifiers.
NOTE :- - i) Rules are mandatory to follow.
        - ii) If not follow we get compile time error.
        - iii) Because rules are check by compiler.
1) An identifier cannot start with a number
  e.g. 1Program (Wrong)
       Program1 (Correct)
2) Chracter spaces are not allowed while naming the identifer.
  e.g. Introduction (Correct)
       Intro duction (Wrong)
3) Special Characters are not allowed other that "$" and "_" (Doller and Underscore)
4) We cannot use keywords as identifiers.

# Conventions
1)  Conventions are nothing but the culture followed by the programmer or we can say it as industry standard.
2)  Conventions are not check by the compiler, and it is not mandatory to follow but, it is hightly recommended to follow.

# Conventions for class Name and Interface Name
Case 1 :- If class name or interface name is single word the first character of word must be Upper Case.
    e.g. Program1 
         Introduction.
Case 2 :- If class Name or interface name has multiple words every first character of the word is written in Upper Case.
    e.g. MyFirstProgram (Pascal Case)

# Conventions for Method Name and Variable Name
Case 1 :- It the method name or variable name is in single word, all the character written in lower case.
    e.g. main() ----- // Identifier

Case 2 :- If method name or variable name has multiple word first character fo the word must be written in lower case.
        - From the 2nd word every first character must be written in Upper Case.
      e.g. mergeMyName()
           additionMethod()
           printMyName() ----// Camel Casing

    - (_) Underscore is a keyword cannot be used as identifier.
    - ($) Used as a Identifier

# Literals :- Literals are nothing but the data which is in a written format
(In Java, a literal is a fixed constant value that you directly write in the program code.
It represents the actual data that is stored in a variable)
    - Single value data(Primitive)
        - Number -- Integer
            - Whole Number (Number without decimal point(0, -1, -2, 50, 100 etc))
            - Decimal (Number with decimal point(0.03, 3.14, 9.81, -13.6 etc))
            - Character 
              - They are written in single quotes('')
                - Alphabets
                  i) UpperCase('A'-'Z')
                  ii) LowerCase('a'-'z')
            - Digits(0-9)
            - Special Character
              - Other than Alphabets and digits rest of the characters are speical characters.
            - Boolean (true OR false)
    - Multivalue data(Non-Primitive)
        - String :- Group of Character written in ("") dobule quotes.
        - Array
        - Interface etc.

Example single quot and double quotes
class Intro
{
  public static void main(String args[])
  {
    System.out.println("Chinmay Gaikwad");
    System.out.println(23);
    System.out.println(5000.50);
    System.out.println('Z');
    System.out.println(true);
  }
}

# ASCII Value (American Standard Code for Information Interchange)
  - Every character is assing with speicial character as known as ASCII values.
  - The ASCII range is from 0 to 127.
  Where - Digits(0 to 9)
          ASCII Value(48 to 57)

          UpperCase Alphabets('A','Z')
          ASCII Value(65 - 90)
          LowerCase Alphabets('A','Z')
          ASCII Value(97 - 122)
  Rest of all are speical character
  i.e.(0 - 47)
      (58 - 64)
      (91 - 96)
      (123 - 127)

  - Extended ASCII Range from 128 to 255
  - ASCII values in C and C++ are 127
  - But in JAVA ASCII values are 0 to 255
                           i.e.128 to 255
  Reason, Java supports multiple language.
*******************Notes added on date 21 March 2025 Friday*******************

# Variable Declaration Statement
  - It is a statement used to create a variable
  Syntax :- Datatype VariableName;
            e.g. byte score;
                 float height;
                 char grade;
                 String name;
# Variable Initialization
  - It is a statement used to assing the value inside the variable.

  Syntax :- VariableName = value / expression;
            name = "Ishan Kishan";
            score = 106;
            grade = 'A';
            height = 5.7f;

Example :- 
class var1
{
  public static void main(String args)
  {
    String name;
    byte score;
    float height;
    char grade;

    name = "Ishan Kishan";
    score = 106;
    height = 5.7f;
    grade = 'A';

    System.out.println(name);
    System.out.println(score);
    System.out.println(height);
    System.out.println(grade);
  }
}

# Variable declare and Initialization statement
  - Here we declare the variable and store the value simultaniously
  Syntax :- DataType VariableName = value / expression;





